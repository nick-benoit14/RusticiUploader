#!/usr/bin/env ruby

require 'dotenv'
Dotenv.load
require 'digest'


USAGE = "\n\nThis script creates course import endpoint. Once you have an endpoint
you could use something like postman or curl to make a multipart post request with
the scorm zip file to upload to scorm cloud. In postman you can make a form-data
post request to the url generated by this script with a
form parameter key to 'filename' with its value being a scorm zip file\n\n"

if(ARGV.length != 1)
  puts USAGE
  exit
end

# Get the URL for the call
def prepare_url(method, appid, secret,  params = {})
	timestamp = Time.now.utc.strftime('%Y%m%d%H%M%S')
	params[:method] = method
	params[:appid] = appid
	params[:ts] = timestamp
	html_params = params.map { |k,v| "#{k.to_s}=#{v}" }.join("&")

	raw = secret + params.keys.
			sort{ |a,b| a.to_s.downcase <=> b.to_s.downcase }.
			map{ |k| "#{k.to_s}#{params[k]}" }.
			join

	sig = Digest::MD5.hexdigest(raw)
	"http://cloud.scorm.com/api?#{html_params}&sig=#{sig}"
end


puts prepare_url("rustici.course.importCourse", ENV['APP_ID'], ENV['SECRET'], {courseid:ARGV[0]})
